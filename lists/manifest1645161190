apiVersion: batch/v1
kind: Job
metadata:
  name: tseries-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-162919","am-scalable-k8s-275c1a","am-scalable-k8s-5872ef","am-scalable-k8s-6509e4","am-scalable-k8s-6effa4","am-scalable-k8s-a34d6c","am-scalable-k8s-ed8ef3"]
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
      containers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("tseries", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)' && cp -r /usr/local/lib/R/site-library/tseries /mnt/libs/R/tseries && cp tseries* /mnt/libs/R/
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
        resources:
          requests:
            memory: 500Mi
            cpu: 250m
          limits:
            memory: 2Gi
            cpu: 1700m
      restartPolicy: OnFailure
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: tmvtnorm-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-162919","am-scalable-k8s-275c1a","am-scalable-k8s-5872ef","am-scalable-k8s-6509e4","am-scalable-k8s-6effa4","am-scalable-k8s-a34d6c","am-scalable-k8s-ed8ef3"]
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
      containers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("tmvtnorm", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)' && cp -r /usr/local/lib/R/site-library/tmvtnorm /mnt/libs/R/tmvtnorm && cp tmvtnorm* /mnt/libs/R/
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
        resources:
          requests:
            memory: 500Mi
            cpu: 250m
          limits:
            memory: 2Gi
            cpu: 1700m
      restartPolicy: OnFailure
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: mutoss-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-162919","am-scalable-k8s-275c1a","am-scalable-k8s-5872ef","am-scalable-k8s-6509e4","am-scalable-k8s-6effa4","am-scalable-k8s-a34d6c","am-scalable-k8s-ed8ef3"]
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
      containers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("mutoss", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)' && cp -r /usr/local/lib/R/site-library/mutoss /mnt/libs/R/mutoss && cp mutoss* /mnt/libs/R/
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
        resources:
          requests:
            memory: 500Mi
            cpu: 250m
          limits:
            memory: 2Gi
            cpu: 1700m
      restartPolicy: OnFailure
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: coin-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-162919","am-scalable-k8s-275c1a","am-scalable-k8s-5872ef","am-scalable-k8s-6509e4","am-scalable-k8s-6effa4","am-scalable-k8s-a34d6c","am-scalable-k8s-ed8ef3"]
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
      containers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("coin", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)' && cp -r /usr/local/lib/R/site-library/coin /mnt/libs/R/coin && cp coin* /mnt/libs/R/
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
        resources:
          requests:
            memory: 500Mi
            cpu: 250m
          limits:
            memory: 2Gi
            cpu: 1700m
      restartPolicy: OnFailure
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: icsnp-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-162919","am-scalable-k8s-275c1a","am-scalable-k8s-5872ef","am-scalable-k8s-6509e4","am-scalable-k8s-6effa4","am-scalable-k8s-a34d6c","am-scalable-k8s-ed8ef3"]
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
      containers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("ICSNP", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)' && cp -r /usr/local/lib/R/site-library/ICSNP /mnt/libs/R/ICSNP && cp ICSNP* /mnt/libs/R/
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
        resources:
          requests:
            memory: 500Mi
            cpu: 250m
          limits:
            memory: 2Gi
            cpu: 1700m
      restartPolicy: OnFailure
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: dirichletreg-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-162919","am-scalable-k8s-275c1a","am-scalable-k8s-5872ef","am-scalable-k8s-6509e4","am-scalable-k8s-6effa4","am-scalable-k8s-a34d6c","am-scalable-k8s-ed8ef3"]
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
      containers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("DirichletReg", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)' && cp -r /usr/local/lib/R/site-library/DirichletReg /mnt/libs/R/DirichletReg && cp DirichletReg* /mnt/libs/R/
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
        resources:
          requests:
            memory: 500Mi
            cpu: 250m
          limits:
            memory: 2Gi
            cpu: 1700m
      restartPolicy: OnFailure
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: desingle-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-162919","am-scalable-k8s-275c1a","am-scalable-k8s-5872ef","am-scalable-k8s-6509e4","am-scalable-k8s-6effa4","am-scalable-k8s-a34d6c","am-scalable-k8s-ed8ef3"]
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
      containers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("DEsingle", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)' && cp -r /usr/local/lib/R/site-library/DEsingle /mnt/libs/R/DEsingle && cp DEsingle* /mnt/libs/R/
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
        resources:
          requests:
            memory: 500Mi
            cpu: 250m
          limits:
            memory: 2Gi
            cpu: 1700m
      restartPolicy: OnFailure
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: c50-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-162919","am-scalable-k8s-275c1a","am-scalable-k8s-5872ef","am-scalable-k8s-6509e4","am-scalable-k8s-6effa4","am-scalable-k8s-a34d6c","am-scalable-k8s-ed8ef3"]
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
      containers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("C50", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)' && cp -r /usr/local/lib/R/site-library/C50 /mnt/libs/R/C50 && cp C50* /mnt/libs/R/
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
        resources:
          requests:
            memory: 500Mi
            cpu: 250m
          limits:
            memory: 2Gi
            cpu: 1700m
      restartPolicy: OnFailure
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: sscu-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-162919","am-scalable-k8s-275c1a","am-scalable-k8s-5872ef","am-scalable-k8s-6509e4","am-scalable-k8s-6effa4","am-scalable-k8s-a34d6c","am-scalable-k8s-ed8ef3"]
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
      containers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("sscu", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)' && cp -r /usr/local/lib/R/site-library/sscu /mnt/libs/R/sscu && cp sscu* /mnt/libs/R/
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
        resources:
          requests:
            memory: 500Mi
            cpu: 250m
          limits:
            memory: 2Gi
            cpu: 1700m
      restartPolicy: OnFailure
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: seqcna-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-162919","am-scalable-k8s-275c1a","am-scalable-k8s-5872ef","am-scalable-k8s-6509e4","am-scalable-k8s-6effa4","am-scalable-k8s-a34d6c","am-scalable-k8s-ed8ef3"]
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
      containers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("seqCNA", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)' && cp -r /usr/local/lib/R/site-library/seqCNA /mnt/libs/R/seqCNA && cp seqCNA* /mnt/libs/R/
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
        resources:
          requests:
            memory: 500Mi
            cpu: 250m
          limits:
            memory: 2Gi
            cpu: 1700m
      restartPolicy: OnFailure
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: synmut-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-162919","am-scalable-k8s-275c1a","am-scalable-k8s-5872ef","am-scalable-k8s-6509e4","am-scalable-k8s-6effa4","am-scalable-k8s-a34d6c","am-scalable-k8s-ed8ef3"]
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
      containers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("SynMut", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)' && cp -r /usr/local/lib/R/site-library/SynMut /mnt/libs/R/SynMut && cp SynMut* /mnt/libs/R/
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
        resources:
          requests:
            memory: 500Mi
            cpu: 250m
          limits:
            memory: 2Gi
            cpu: 1700m
      restartPolicy: OnFailure
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: methtargetedngs-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-162919","am-scalable-k8s-275c1a","am-scalable-k8s-5872ef","am-scalable-k8s-6509e4","am-scalable-k8s-6effa4","am-scalable-k8s-a34d6c","am-scalable-k8s-ed8ef3"]
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
      containers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("MethTargetedNGS", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)' && cp -r /usr/local/lib/R/site-library/MethTargetedNGS /mnt/libs/R/MethTargetedNGS && cp MethTargetedNGS* /mnt/libs/R/
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
        resources:
          requests:
            memory: 500Mi
            cpu: 250m
          limits:
            memory: 2Gi
            cpu: 1700m
      restartPolicy: OnFailure
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: genega-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-162919","am-scalable-k8s-275c1a","am-scalable-k8s-5872ef","am-scalable-k8s-6509e4","am-scalable-k8s-6effa4","am-scalable-k8s-a34d6c","am-scalable-k8s-ed8ef3"]
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
      containers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("GeneGA", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)' && cp -r /usr/local/lib/R/site-library/GeneGA /mnt/libs/R/GeneGA && cp GeneGA* /mnt/libs/R/
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
        resources:
          requests:
            memory: 500Mi
            cpu: 250m
          limits:
            memory: 2Gi
            cpu: 1700m
      restartPolicy: OnFailure
  backoffLimit: 4
---
