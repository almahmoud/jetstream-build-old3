apiVersion: batch/v1
kind: Job
metadata:
  name: xlsxjars-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-162919","am-scalable-k8s-275c1a","am-scalable-k8s-5872ef","am-scalable-k8s-6509e4","am-scalable-k8s-6effa4","am-scalable-k8s-a34d6c","am-scalable-k8s-ed8ef3"]
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
      containers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("xlsxjars", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)' && cp -r /usr/local/lib/R/site-library/xlsxjars /mnt/libs/R/xlsxjars && cp xlsxjars* /mnt/libs/R/
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
        resources:
          requests:
            memory: 500Mi
            cpu: 250m
          limits:
            memory: 2Gi
            cpu: 1700m
      restartPolicy: OnFailure
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: timeseries-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-162919","am-scalable-k8s-275c1a","am-scalable-k8s-5872ef","am-scalable-k8s-6509e4","am-scalable-k8s-6effa4","am-scalable-k8s-a34d6c","am-scalable-k8s-ed8ef3"]
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
      containers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("timeSeries", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)' && cp -r /usr/local/lib/R/site-library/timeSeries /mnt/libs/R/timeSeries && cp timeSeries* /mnt/libs/R/
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
        resources:
          requests:
            memory: 500Mi
            cpu: 250m
          limits:
            memory: 2Gi
            cpu: 1700m
      restartPolicy: OnFailure
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: rcdklibs-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-162919","am-scalable-k8s-275c1a","am-scalable-k8s-5872ef","am-scalable-k8s-6509e4","am-scalable-k8s-6effa4","am-scalable-k8s-a34d6c","am-scalable-k8s-ed8ef3"]
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
      containers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("rcdklibs", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)' && cp -r /usr/local/lib/R/site-library/rcdklibs /mnt/libs/R/rcdklibs && cp rcdklibs* /mnt/libs/R/
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
        resources:
          requests:
            memory: 500Mi
            cpu: 250m
          limits:
            memory: 2Gi
            cpu: 1700m
      restartPolicy: OnFailure
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: here-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-162919","am-scalable-k8s-275c1a","am-scalable-k8s-5872ef","am-scalable-k8s-6509e4","am-scalable-k8s-6effa4","am-scalable-k8s-a34d6c","am-scalable-k8s-ed8ef3"]
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
      containers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("here", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)' && cp -r /usr/local/lib/R/site-library/here /mnt/libs/R/here && cp here* /mnt/libs/R/
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
        resources:
          requests:
            memory: 500Mi
            cpu: 250m
          limits:
            memory: 2Gi
            cpu: 1700m
      restartPolicy: OnFailure
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: rwekajars-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-162919","am-scalable-k8s-275c1a","am-scalable-k8s-5872ef","am-scalable-k8s-6509e4","am-scalable-k8s-6effa4","am-scalable-k8s-a34d6c","am-scalable-k8s-ed8ef3"]
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
      containers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("RWekajars", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)' && cp -r /usr/local/lib/R/site-library/RWekajars /mnt/libs/R/RWekajars && cp RWekajars* /mnt/libs/R/
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
        resources:
          requests:
            memory: 500Mi
            cpu: 250m
          limits:
            memory: 2Gi
            cpu: 1700m
      restartPolicy: OnFailure
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: impcdata-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-162919","am-scalable-k8s-275c1a","am-scalable-k8s-5872ef","am-scalable-k8s-6509e4","am-scalable-k8s-6effa4","am-scalable-k8s-a34d6c","am-scalable-k8s-ed8ef3"]
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
      containers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("IMPCdata", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)' && cp -r /usr/local/lib/R/site-library/IMPCdata /mnt/libs/R/IMPCdata && cp IMPCdata* /mnt/libs/R/
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
        resources:
          requests:
            memory: 500Mi
            cpu: 250m
          limits:
            memory: 2Gi
            cpu: 1700m
      restartPolicy: OnFailure
  backoffLimit: 4
---
