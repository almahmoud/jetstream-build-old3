apiVersion: batch/v1
kind: Job
metadata:
  name: gridextra-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-5872ef","am-scalable-k8s-7b5e61"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("gridExtra", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      containers:
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /usr/local/lib/R/site-library/gridExtra /mnt/libs/R/gridExtra && cd /home/rstudio && ls | grep "gridExtra" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && rclone copyto /usr/local/lib/R/site-library/gridExtra osn:bir190004-bucket01/libraries/RELEASE_3_14/container/gridExtra -v && cd /home/rstudio && ls | grep "gridExtra" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && rclone copyto /usr/local/lib/R/site-library/gridExtra iujs:js-builder/libraries/RELEASE_3_14/container/gridExtra -v && cd /home/rstudio && ls | grep "gridExtra" | xargs -i rclone copyto ./{} iujs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: rhdf5client-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-5872ef","am-scalable-k8s-7b5e61"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("rhdf5client", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      containers:
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /usr/local/lib/R/site-library/rhdf5client /mnt/libs/R/rhdf5client && cd /home/rstudio && ls | grep "rhdf5client" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && rclone copyto /usr/local/lib/R/site-library/rhdf5client osn:bir190004-bucket01/libraries/RELEASE_3_14/container/rhdf5client -v && cd /home/rstudio && ls | grep "rhdf5client" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && rclone copyto /usr/local/lib/R/site-library/rhdf5client iujs:js-builder/libraries/RELEASE_3_14/container/rhdf5client -v && cd /home/rstudio && ls | grep "rhdf5client" | xargs -i rclone copyto ./{} iujs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: beachmat-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-5872ef","am-scalable-k8s-7b5e61"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("beachmat", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      containers:
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /usr/local/lib/R/site-library/beachmat /mnt/libs/R/beachmat && cd /home/rstudio && ls | grep "beachmat" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && rclone copyto /usr/local/lib/R/site-library/beachmat osn:bir190004-bucket01/libraries/RELEASE_3_14/container/beachmat -v && cd /home/rstudio && ls | grep "beachmat" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && rclone copyto /usr/local/lib/R/site-library/beachmat iujs:js-builder/libraries/RELEASE_3_14/container/beachmat -v && cd /home/rstudio && ls | grep "beachmat" | xargs -i rclone copyto ./{} iujs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: scaledmatrix-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-5872ef","am-scalable-k8s-7b5e61"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("ScaledMatrix", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      containers:
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /usr/local/lib/R/site-library/ScaledMatrix /mnt/libs/R/ScaledMatrix && cd /home/rstudio && ls | grep "ScaledMatrix" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && rclone copyto /usr/local/lib/R/site-library/ScaledMatrix osn:bir190004-bucket01/libraries/RELEASE_3_14/container/ScaledMatrix -v && cd /home/rstudio && ls | grep "ScaledMatrix" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && rclone copyto /usr/local/lib/R/site-library/ScaledMatrix iujs:js-builder/libraries/RELEASE_3_14/container/ScaledMatrix -v && cd /home/rstudio && ls | grep "ScaledMatrix" | xargs -i rclone copyto ./{} iujs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: residualmatrix-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-5872ef","am-scalable-k8s-7b5e61"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("ResidualMatrix", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      containers:
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /usr/local/lib/R/site-library/ResidualMatrix /mnt/libs/R/ResidualMatrix && cd /home/rstudio && ls | grep "ResidualMatrix" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && rclone copyto /usr/local/lib/R/site-library/ResidualMatrix osn:bir190004-bucket01/libraries/RELEASE_3_14/container/ResidualMatrix -v && cd /home/rstudio && ls | grep "ResidualMatrix" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && rclone copyto /usr/local/lib/R/site-library/ResidualMatrix iujs:js-builder/libraries/RELEASE_3_14/container/ResidualMatrix -v && cd /home/rstudio && ls | grep "ResidualMatrix" | xargs -i rclone copyto ./{} iujs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: delayeddataframe-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-5872ef","am-scalable-k8s-7b5e61"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("DelayedDataFrame", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      containers:
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /usr/local/lib/R/site-library/DelayedDataFrame /mnt/libs/R/DelayedDataFrame && cd /home/rstudio && ls | grep "DelayedDataFrame" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && rclone copyto /usr/local/lib/R/site-library/DelayedDataFrame osn:bir190004-bucket01/libraries/RELEASE_3_14/container/DelayedDataFrame -v && cd /home/rstudio && ls | grep "DelayedDataFrame" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && rclone copyto /usr/local/lib/R/site-library/DelayedDataFrame iujs:js-builder/libraries/RELEASE_3_14/container/DelayedDataFrame -v && cd /home/rstudio && ls | grep "DelayedDataFrame" | xargs -i rclone copyto ./{} iujs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: lmdme-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-5872ef","am-scalable-k8s-7b5e61"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("lmdme", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      containers:
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /usr/local/lib/R/site-library/lmdme /mnt/libs/R/lmdme && cd /home/rstudio && ls | grep "lmdme" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && rclone copyto /usr/local/lib/R/site-library/lmdme osn:bir190004-bucket01/libraries/RELEASE_3_14/container/lmdme -v && cd /home/rstudio && ls | grep "lmdme" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && rclone copyto /usr/local/lib/R/site-library/lmdme iujs:js-builder/libraries/RELEASE_3_14/container/lmdme -v && cd /home/rstudio && ls | grep "lmdme" | xargs -i rclone copyto ./{} iujs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
