apiVersion: batch/v1
kind: Job
metadata:
  name: survey-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-162919","am-scalable-k8s-275c1a","am-scalable-k8s-5872ef","am-scalable-k8s-6509e4","am-scalable-k8s-6effa4","am-scalable-k8s-a34d6c","am-scalable-k8s-ed8ef3"]
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
      containers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("survey", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)' && cp -r /usr/local/lib/R/site-library/survey /mnt/libs/R/survey && cp survey* /mnt/libs/R/
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
        resources:
          requests:
            memory: 500Mi
            cpu: 250m
          limits:
            memory: 2Gi
            cpu: 1700m
      restartPolicy: OnFailure
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: spatstatgeom-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-162919","am-scalable-k8s-275c1a","am-scalable-k8s-5872ef","am-scalable-k8s-6509e4","am-scalable-k8s-6effa4","am-scalable-k8s-a34d6c","am-scalable-k8s-ed8ef3"]
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
      containers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("spatstat.geom", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)' && cp -r /usr/local/lib/R/site-library/spatstat.geom /mnt/libs/R/spatstat.geom && cp spatstat.geom* /mnt/libs/R/
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
        resources:
          requests:
            memory: 500Mi
            cpu: 250m
          limits:
            memory: 2Gi
            cpu: 1700m
      restartPolicy: OnFailure
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: snpstats-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-162919","am-scalable-k8s-275c1a","am-scalable-k8s-5872ef","am-scalable-k8s-6509e4","am-scalable-k8s-6effa4","am-scalable-k8s-a34d6c","am-scalable-k8s-ed8ef3"]
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
      containers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("snpStats", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)' && cp -r /usr/local/lib/R/site-library/snpStats /mnt/libs/R/snpStats && cp snpStats* /mnt/libs/R/
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
        resources:
          requests:
            memory: 500Mi
            cpu: 250m
          limits:
            memory: 2Gi
            cpu: 1700m
      restartPolicy: OnFailure
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: penalized-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-162919","am-scalable-k8s-275c1a","am-scalable-k8s-5872ef","am-scalable-k8s-6509e4","am-scalable-k8s-6effa4","am-scalable-k8s-a34d6c","am-scalable-k8s-ed8ef3"]
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
      containers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("penalized", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)' && cp -r /usr/local/lib/R/site-library/penalized /mnt/libs/R/penalized && cp penalized* /mnt/libs/R/
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
        resources:
          requests:
            memory: 500Mi
            cpu: 250m
          limits:
            memory: 2Gi
            cpu: 1700m
      restartPolicy: OnFailure
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: pathwaypca-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-162919","am-scalable-k8s-275c1a","am-scalable-k8s-5872ef","am-scalable-k8s-6509e4","am-scalable-k8s-6effa4","am-scalable-k8s-a34d6c","am-scalable-k8s-ed8ef3"]
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
      containers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("pathwayPCA", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)' && cp -r /usr/local/lib/R/site-library/pathwayPCA /mnt/libs/R/pathwayPCA && cp pathwayPCA* /mnt/libs/R/
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
        resources:
          requests:
            memory: 500Mi
            cpu: 250m
          limits:
            memory: 2Gi
            cpu: 1700m
      restartPolicy: OnFailure
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: partykit-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-162919","am-scalable-k8s-275c1a","am-scalable-k8s-5872ef","am-scalable-k8s-6509e4","am-scalable-k8s-6effa4","am-scalable-k8s-a34d6c","am-scalable-k8s-ed8ef3"]
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
      containers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("partykit", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)' && cp -r /usr/local/lib/R/site-library/partykit /mnt/libs/R/partykit && cp partykit* /mnt/libs/R/
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
        resources:
          requests:
            memory: 500Mi
            cpu: 250m
          limits:
            memory: 2Gi
            cpu: 1700m
      restartPolicy: OnFailure
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: pamr-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-162919","am-scalable-k8s-275c1a","am-scalable-k8s-5872ef","am-scalable-k8s-6509e4","am-scalable-k8s-6effa4","am-scalable-k8s-a34d6c","am-scalable-k8s-ed8ef3"]
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
      containers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("pamr", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)' && cp -r /usr/local/lib/R/site-library/pamr /mnt/libs/R/pamr && cp pamr* /mnt/libs/R/
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
        resources:
          requests:
            memory: 500Mi
            cpu: 250m
          limits:
            memory: 2Gi
            cpu: 1700m
      restartPolicy: OnFailure
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: multtest-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-162919","am-scalable-k8s-275c1a","am-scalable-k8s-5872ef","am-scalable-k8s-6509e4","am-scalable-k8s-6effa4","am-scalable-k8s-a34d6c","am-scalable-k8s-ed8ef3"]
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
      containers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("multtest", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)' && cp -r /usr/local/lib/R/site-library/multtest /mnt/libs/R/multtest && cp multtest* /mnt/libs/R/
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
        resources:
          requests:
            memory: 500Mi
            cpu: 250m
          limits:
            memory: 2Gi
            cpu: 1700m
      restartPolicy: OnFailure
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: msm-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-162919","am-scalable-k8s-275c1a","am-scalable-k8s-5872ef","am-scalable-k8s-6509e4","am-scalable-k8s-6effa4","am-scalable-k8s-a34d6c","am-scalable-k8s-ed8ef3"]
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
      containers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("msm", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)' && cp -r /usr/local/lib/R/site-library/msm /mnt/libs/R/msm && cp msm* /mnt/libs/R/
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
        resources:
          requests:
            memory: 500Mi
            cpu: 250m
          limits:
            memory: 2Gi
            cpu: 1700m
      restartPolicy: OnFailure
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: maftools-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-162919","am-scalable-k8s-275c1a","am-scalable-k8s-5872ef","am-scalable-k8s-6509e4","am-scalable-k8s-6effa4","am-scalable-k8s-a34d6c","am-scalable-k8s-ed8ef3"]
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
      containers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("maftools", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)' && cp -r /usr/local/lib/R/site-library/maftools /mnt/libs/R/maftools && cp maftools* /mnt/libs/R/
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
        resources:
          requests:
            memory: 500Mi
            cpu: 250m
          limits:
            memory: 2Gi
            cpu: 1700m
      restartPolicy: OnFailure
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: mrmre-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-162919","am-scalable-k8s-275c1a","am-scalable-k8s-5872ef","am-scalable-k8s-6509e4","am-scalable-k8s-6effa4","am-scalable-k8s-a34d6c","am-scalable-k8s-ed8ef3"]
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
      containers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("mRMRe", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)' && cp -r /usr/local/lib/R/site-library/mRMRe /mnt/libs/R/mRMRe && cp mRMRe* /mnt/libs/R/
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
        resources:
          requests:
            memory: 500Mi
            cpu: 250m
          limits:
            memory: 2Gi
            cpu: 1700m
      restartPolicy: OnFailure
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: kmci-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-162919","am-scalable-k8s-275c1a","am-scalable-k8s-5872ef","am-scalable-k8s-6509e4","am-scalable-k8s-6effa4","am-scalable-k8s-a34d6c","am-scalable-k8s-ed8ef3"]
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
      containers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("km.ci", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)' && cp -r /usr/local/lib/R/site-library/km.ci /mnt/libs/R/km.ci && cp km.ci* /mnt/libs/R/
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
        resources:
          requests:
            memory: 500Mi
            cpu: 250m
          limits:
            memory: 2Gi
            cpu: 1700m
      restartPolicy: OnFailure
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: gbm-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-162919","am-scalable-k8s-275c1a","am-scalable-k8s-5872ef","am-scalable-k8s-6509e4","am-scalable-k8s-6effa4","am-scalable-k8s-a34d6c","am-scalable-k8s-ed8ef3"]
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
      containers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("gbm", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)' && cp -r /usr/local/lib/R/site-library/gbm /mnt/libs/R/gbm && cp gbm* /mnt/libs/R/
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
        resources:
          requests:
            memory: 500Mi
            cpu: 250m
          limits:
            memory: 2Gi
            cpu: 1700m
      restartPolicy: OnFailure
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: gamlss-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-162919","am-scalable-k8s-275c1a","am-scalable-k8s-5872ef","am-scalable-k8s-6509e4","am-scalable-k8s-6effa4","am-scalable-k8s-a34d6c","am-scalable-k8s-ed8ef3"]
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
      containers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("gamlss", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)' && cp -r /usr/local/lib/R/site-library/gamlss /mnt/libs/R/gamlss && cp gamlss* /mnt/libs/R/
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
        resources:
          requests:
            memory: 500Mi
            cpu: 250m
          limits:
            memory: 2Gi
            cpu: 1700m
      restartPolicy: OnFailure
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: fitdistrplus-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-162919","am-scalable-k8s-275c1a","am-scalable-k8s-5872ef","am-scalable-k8s-6509e4","am-scalable-k8s-6effa4","am-scalable-k8s-a34d6c","am-scalable-k8s-ed8ef3"]
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
      containers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("fitdistrplus", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)' && cp -r /usr/local/lib/R/site-library/fitdistrplus /mnt/libs/R/fitdistrplus && cp fitdistrplus* /mnt/libs/R/
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
        resources:
          requests:
            memory: 500Mi
            cpu: 250m
          limits:
            memory: 2Gi
            cpu: 1700m
      restartPolicy: OnFailure
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: thdata-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-162919","am-scalable-k8s-275c1a","am-scalable-k8s-5872ef","am-scalable-k8s-6509e4","am-scalable-k8s-6effa4","am-scalable-k8s-a34d6c","am-scalable-k8s-ed8ef3"]
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
      containers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("TH.data", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)' && cp -r /usr/local/lib/R/site-library/TH.data /mnt/libs/R/TH.data && cp TH.data* /mnt/libs/R/
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
        resources:
          requests:
            memory: 500Mi
            cpu: 250m
          limits:
            memory: 2Gi
            cpu: 1700m
      restartPolicy: OnFailure
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: nada-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-162919","am-scalable-k8s-275c1a","am-scalable-k8s-5872ef","am-scalable-k8s-6509e4","am-scalable-k8s-6effa4","am-scalable-k8s-a34d6c","am-scalable-k8s-ed8ef3"]
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
      containers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("NADA", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)' && cp -r /usr/local/lib/R/site-library/NADA /mnt/libs/R/NADA && cp NADA* /mnt/libs/R/
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
        resources:
          requests:
            memory: 500Mi
            cpu: 250m
          limits:
            memory: 2Gi
            cpu: 1700m
      restartPolicy: OnFailure
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: logicreg-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-162919","am-scalable-k8s-275c1a","am-scalable-k8s-5872ef","am-scalable-k8s-6509e4","am-scalable-k8s-6effa4","am-scalable-k8s-a34d6c","am-scalable-k8s-ed8ef3"]
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
      containers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("LogicReg", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)' && cp -r /usr/local/lib/R/site-library/LogicReg /mnt/libs/R/LogicReg && cp LogicReg* /mnt/libs/R/
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
        resources:
          requests:
            memory: 500Mi
            cpu: 250m
          limits:
            memory: 2Gi
            cpu: 1700m
      restartPolicy: OnFailure
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: icens-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-162919","am-scalable-k8s-275c1a","am-scalable-k8s-5872ef","am-scalable-k8s-6509e4","am-scalable-k8s-6effa4","am-scalable-k8s-a34d6c","am-scalable-k8s-ed8ef3"]
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
      containers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("Icens", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)' && cp -r /usr/local/lib/R/site-library/Icens /mnt/libs/R/Icens && cp Icens* /mnt/libs/R/
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
        resources:
          requests:
            memory: 500Mi
            cpu: 250m
          limits:
            memory: 2Gi
            cpu: 1700m
      restartPolicy: OnFailure
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: sigsquared-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-162919","am-scalable-k8s-275c1a","am-scalable-k8s-5872ef","am-scalable-k8s-6509e4","am-scalable-k8s-6effa4","am-scalable-k8s-a34d6c","am-scalable-k8s-ed8ef3"]
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
      containers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("sigsquared", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)' && cp -r /usr/local/lib/R/site-library/sigsquared /mnt/libs/R/sigsquared && cp sigsquared* /mnt/libs/R/
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
        resources:
          requests:
            memory: 500Mi
            cpu: 250m
          limits:
            memory: 2Gi
            cpu: 1700m
      restartPolicy: OnFailure
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: rbsurv-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-162919","am-scalable-k8s-275c1a","am-scalable-k8s-5872ef","am-scalable-k8s-6509e4","am-scalable-k8s-6effa4","am-scalable-k8s-a34d6c","am-scalable-k8s-ed8ef3"]
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
      containers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("rbsurv", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)' && cp -r /usr/local/lib/R/site-library/rbsurv /mnt/libs/R/rbsurv && cp rbsurv* /mnt/libs/R/
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
        resources:
          requests:
            memory: 500Mi
            cpu: 250m
          limits:
            memory: 2Gi
            cpu: 1700m
      restartPolicy: OnFailure
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: fmrs-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-162919","am-scalable-k8s-275c1a","am-scalable-k8s-5872ef","am-scalable-k8s-6509e4","am-scalable-k8s-6effa4","am-scalable-k8s-a34d6c","am-scalable-k8s-ed8ef3"]
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
      containers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("fmrs", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)' && cp -r /usr/local/lib/R/site-library/fmrs /mnt/libs/R/fmrs && cp fmrs* /mnt/libs/R/
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
        resources:
          requests:
            memory: 500Mi
            cpu: 250m
          limits:
            memory: 2Gi
            cpu: 1700m
      restartPolicy: OnFailure
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: chopsticks-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-162919","am-scalable-k8s-275c1a","am-scalable-k8s-5872ef","am-scalable-k8s-6509e4","am-scalable-k8s-6effa4","am-scalable-k8s-a34d6c","am-scalable-k8s-ed8ef3"]
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
      containers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("chopsticks", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)' && cp -r /usr/local/lib/R/site-library/chopsticks /mnt/libs/R/chopsticks && cp chopsticks* /mnt/libs/R/
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
        resources:
          requests:
            memory: 500Mi
            cpu: 250m
          limits:
            memory: 2Gi
            cpu: 1700m
      restartPolicy: OnFailure
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: hybridmtest-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-162919","am-scalable-k8s-275c1a","am-scalable-k8s-5872ef","am-scalable-k8s-6509e4","am-scalable-k8s-6effa4","am-scalable-k8s-a34d6c","am-scalable-k8s-ed8ef3"]
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
      containers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("HybridMTest", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)' && cp -r /usr/local/lib/R/site-library/HybridMTest /mnt/libs/R/HybridMTest && cp HybridMTest* /mnt/libs/R/
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
        resources:
          requests:
            memory: 500Mi
            cpu: 250m
          limits:
            memory: 2Gi
            cpu: 1700m
      restartPolicy: OnFailure
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: cgen-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-162919","am-scalable-k8s-275c1a","am-scalable-k8s-5872ef","am-scalable-k8s-6509e4","am-scalable-k8s-6effa4","am-scalable-k8s-a34d6c","am-scalable-k8s-ed8ef3"]
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
      containers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("CGEN", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)' && cp -r /usr/local/lib/R/site-library/CGEN /mnt/libs/R/CGEN && cp CGEN* /mnt/libs/R/
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
        resources:
          requests:
            memory: 500Mi
            cpu: 250m
          limits:
            memory: 2Gi
            cpu: 1700m
      restartPolicy: OnFailure
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: anf-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-162919","am-scalable-k8s-275c1a","am-scalable-k8s-5872ef","am-scalable-k8s-6509e4","am-scalable-k8s-6effa4","am-scalable-k8s-a34d6c","am-scalable-k8s-ed8ef3"]
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
      containers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("ANF", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)' && cp -r /usr/local/lib/R/site-library/ANF /mnt/libs/R/ANF && cp ANF* /mnt/libs/R/
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
        resources:
          requests:
            memory: 500Mi
            cpu: 250m
          limits:
            memory: 2Gi
            cpu: 1700m
      restartPolicy: OnFailure
  backoffLimit: 4
---
