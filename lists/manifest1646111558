apiVersion: batch/v1
kind: Job
metadata:
  name: urca-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-5872ef","am-scalable-k8s-7b5e61"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("urca", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      containers:
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /usr/local/lib/R/site-library/urca /mnt/libs/R/urca && cd /home/rstudio && ls | grep "urca" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && rclone copyto /usr/local/lib/R/site-library/urca osn:bir190004-bucket01/libraries/RELEASE_3_14/container/urca -v && cd /home/rstudio && ls | grep "urca" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && rclone copyto /usr/local/lib/R/site-library/urca iujs:js-builder/libraries/RELEASE_3_14/container/urca -v && cd /home/rstudio && ls | grep "urca" | xargs -i rclone copyto ./{} iujs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: psych-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-5872ef","am-scalable-k8s-7b5e61"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("psych", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      containers:
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /usr/local/lib/R/site-library/psych /mnt/libs/R/psych && cd /home/rstudio && ls | grep "psych" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && rclone copyto /usr/local/lib/R/site-library/psych osn:bir190004-bucket01/libraries/RELEASE_3_14/container/psych -v && cd /home/rstudio && ls | grep "psych" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && rclone copyto /usr/local/lib/R/site-library/psych iujs:js-builder/libraries/RELEASE_3_14/container/psych -v && cd /home/rstudio && ls | grep "psych" | xargs -i rclone copyto ./{} iujs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: plot3d-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-5872ef","am-scalable-k8s-7b5e61"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("plot3D", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      containers:
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /usr/local/lib/R/site-library/plot3D /mnt/libs/R/plot3D && cd /home/rstudio && ls | grep "plot3D" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && rclone copyto /usr/local/lib/R/site-library/plot3D osn:bir190004-bucket01/libraries/RELEASE_3_14/container/plot3D -v && cd /home/rstudio && ls | grep "plot3D" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && rclone copyto /usr/local/lib/R/site-library/plot3D iujs:js-builder/libraries/RELEASE_3_14/container/plot3D -v && cd /home/rstudio && ls | grep "plot3D" | xargs -i rclone copyto ./{} iujs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: missforest-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-5872ef","am-scalable-k8s-7b5e61"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("missForest", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      containers:
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /usr/local/lib/R/site-library/missForest /mnt/libs/R/missForest && cd /home/rstudio && ls | grep "missForest" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && rclone copyto /usr/local/lib/R/site-library/missForest osn:bir190004-bucket01/libraries/RELEASE_3_14/container/missForest -v && cd /home/rstudio && ls | grep "missForest" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && rclone copyto /usr/local/lib/R/site-library/missForest iujs:js-builder/libraries/RELEASE_3_14/container/missForest -v && cd /home/rstudio && ls | grep "missForest" | xargs -i rclone copyto ./{} iujs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: mgcv-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-5872ef","am-scalable-k8s-7b5e61"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("mgcv", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      containers:
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /usr/local/lib/R/site-library/mgcv /mnt/libs/R/mgcv && cd /home/rstudio && ls | grep "mgcv" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && rclone copyto /usr/local/lib/R/site-library/mgcv osn:bir190004-bucket01/libraries/RELEASE_3_14/container/mgcv -v && cd /home/rstudio && ls | grep "mgcv" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && rclone copyto /usr/local/lib/R/site-library/mgcv iujs:js-builder/libraries/RELEASE_3_14/container/mgcv -v && cd /home/rstudio && ls | grep "mgcv" | xargs -i rclone copyto ./{} iujs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: metafor-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-5872ef","am-scalable-k8s-7b5e61"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("metafor", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      containers:
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /usr/local/lib/R/site-library/metafor /mnt/libs/R/metafor && cd /home/rstudio && ls | grep "metafor" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && rclone copyto /usr/local/lib/R/site-library/metafor osn:bir190004-bucket01/libraries/RELEASE_3_14/container/metafor -v && cd /home/rstudio && ls | grep "metafor" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && rclone copyto /usr/local/lib/R/site-library/metafor iujs:js-builder/libraries/RELEASE_3_14/container/metafor -v && cd /home/rstudio && ls | grep "metafor" | xargs -i rclone copyto ./{} iujs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: gam-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-5872ef","am-scalable-k8s-7b5e61"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("gam", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      containers:
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /usr/local/lib/R/site-library/gam /mnt/libs/R/gam && cd /home/rstudio && ls | grep "gam" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && rclone copyto /usr/local/lib/R/site-library/gam osn:bir190004-bucket01/libraries/RELEASE_3_14/container/gam -v && cd /home/rstudio && ls | grep "gam" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && rclone copyto /usr/local/lib/R/site-library/gam iujs:js-builder/libraries/RELEASE_3_14/container/gam -v && cd /home/rstudio && ls | grep "gam" | xargs -i rclone copyto ./{} iujs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: dosnow-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-5872ef","am-scalable-k8s-7b5e61"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("doSNOW", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      containers:
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /usr/local/lib/R/site-library/doSNOW /mnt/libs/R/doSNOW && cd /home/rstudio && ls | grep "doSNOW" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && rclone copyto /usr/local/lib/R/site-library/doSNOW osn:bir190004-bucket01/libraries/RELEASE_3_14/container/doSNOW -v && cd /home/rstudio && ls | grep "doSNOW" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && rclone copyto /usr/local/lib/R/site-library/doSNOW iujs:js-builder/libraries/RELEASE_3_14/container/doSNOW -v && cd /home/rstudio && ls | grep "doSNOW" | xargs -i rclone copyto ./{} iujs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: doparallel-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-5872ef","am-scalable-k8s-7b5e61"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("doParallel", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      containers:
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /usr/local/lib/R/site-library/doParallel /mnt/libs/R/doParallel && cd /home/rstudio && ls | grep "doParallel" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && rclone copyto /usr/local/lib/R/site-library/doParallel osn:bir190004-bucket01/libraries/RELEASE_3_14/container/doParallel -v && cd /home/rstudio && ls | grep "doParallel" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && rclone copyto /usr/local/lib/R/site-library/doParallel iujs:js-builder/libraries/RELEASE_3_14/container/doParallel -v && cd /home/rstudio && ls | grep "doParallel" | xargs -i rclone copyto ./{} iujs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: depmixs4-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-5872ef","am-scalable-k8s-7b5e61"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("depmixS4", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      containers:
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /usr/local/lib/R/site-library/depmixS4 /mnt/libs/R/depmixS4 && cd /home/rstudio && ls | grep "depmixS4" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && rclone copyto /usr/local/lib/R/site-library/depmixS4 osn:bir190004-bucket01/libraries/RELEASE_3_14/container/depmixS4 -v && cd /home/rstudio && ls | grep "depmixS4" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && rclone copyto /usr/local/lib/R/site-library/depmixS4 iujs:js-builder/libraries/RELEASE_3_14/container/depmixS4 -v && cd /home/rstudio && ls | grep "depmixS4" | xargs -i rclone copyto ./{} iujs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: baseline-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-5872ef","am-scalable-k8s-7b5e61"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("baseline", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      containers:
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /usr/local/lib/R/site-library/baseline /mnt/libs/R/baseline && cd /home/rstudio && ls | grep "baseline" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && rclone copyto /usr/local/lib/R/site-library/baseline osn:bir190004-bucket01/libraries/RELEASE_3_14/container/baseline -v && cd /home/rstudio && ls | grep "baseline" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && rclone copyto /usr/local/lib/R/site-library/baseline iujs:js-builder/libraries/RELEASE_3_14/container/baseline -v && cd /home/rstudio && ls | grep "baseline" | xargs -i rclone copyto ./{} iujs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: ape-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-5872ef","am-scalable-k8s-7b5e61"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("ape", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      containers:
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /usr/local/lib/R/site-library/ape /mnt/libs/R/ape && cd /home/rstudio && ls | grep "ape" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && rclone copyto /usr/local/lib/R/site-library/ape osn:bir190004-bucket01/libraries/RELEASE_3_14/container/ape -v && cd /home/rstudio && ls | grep "ape" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && rclone copyto /usr/local/lib/R/site-library/ape iujs:js-builder/libraries/RELEASE_3_14/container/ape -v && cd /home/rstudio && ls | grep "ape" | xargs -i rclone copyto ./{} iujs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: tsp-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-5872ef","am-scalable-k8s-7b5e61"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("TSP", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      containers:
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /usr/local/lib/R/site-library/TSP /mnt/libs/R/TSP && cd /home/rstudio && ls | grep "TSP" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && rclone copyto /usr/local/lib/R/site-library/TSP osn:bir190004-bucket01/libraries/RELEASE_3_14/container/TSP -v && cd /home/rstudio && ls | grep "TSP" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && rclone copyto /usr/local/lib/R/site-library/TSP iujs:js-builder/libraries/RELEASE_3_14/container/TSP -v && cd /home/rstudio && ls | grep "TSP" | xargs -i rclone copyto ./{} iujs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: mumin-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-5872ef","am-scalable-k8s-7b5e61"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("MuMIn", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      containers:
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /usr/local/lib/R/site-library/MuMIn /mnt/libs/R/MuMIn && cd /home/rstudio && ls | grep "MuMIn" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && rclone copyto /usr/local/lib/R/site-library/MuMIn osn:bir190004-bucket01/libraries/RELEASE_3_14/container/MuMIn -v && cd /home/rstudio && ls | grep "MuMIn" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && rclone copyto /usr/local/lib/R/site-library/MuMIn iujs:js-builder/libraries/RELEASE_3_14/container/MuMIn -v && cd /home/rstudio && ls | grep "MuMIn" | xargs -i rclone copyto ./{} iujs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: lim-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-5872ef","am-scalable-k8s-7b5e61"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("LIM", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      containers:
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /usr/local/lib/R/site-library/LIM /mnt/libs/R/LIM && cd /home/rstudio && ls | grep "LIM" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && rclone copyto /usr/local/lib/R/site-library/LIM osn:bir190004-bucket01/libraries/RELEASE_3_14/container/LIM -v && cd /home/rstudio && ls | grep "LIM" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && rclone copyto /usr/local/lib/R/site-library/LIM iujs:js-builder/libraries/RELEASE_3_14/container/LIM -v && cd /home/rstudio && ls | grep "LIM" | xargs -i rclone copyto ./{} iujs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: ga-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-5872ef","am-scalable-k8s-7b5e61"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("GA", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      containers:
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /usr/local/lib/R/site-library/GA /mnt/libs/R/GA && cd /home/rstudio && ls | grep "GA" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && rclone copyto /usr/local/lib/R/site-library/GA osn:bir190004-bucket01/libraries/RELEASE_3_14/container/GA -v && cd /home/rstudio && ls | grep "GA" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && rclone copyto /usr/local/lib/R/site-library/GA iujs:js-builder/libraries/RELEASE_3_14/container/GA -v && cd /home/rstudio && ls | grep "GA" | xargs -i rclone copyto ./{} iujs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: cpgassoc-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-5872ef","am-scalable-k8s-7b5e61"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("CpGassoc", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      containers:
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /usr/local/lib/R/site-library/CpGassoc /mnt/libs/R/CpGassoc && cd /home/rstudio && ls | grep "CpGassoc" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && rclone copyto /usr/local/lib/R/site-library/CpGassoc osn:bir190004-bucket01/libraries/RELEASE_3_14/container/CpGassoc -v && cd /home/rstudio && ls | grep "CpGassoc" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && rclone copyto /usr/local/lib/R/site-library/CpGassoc iujs:js-builder/libraries/RELEASE_3_14/container/CpGassoc -v && cd /home/rstudio && ls | grep "CpGassoc" | xargs -i rclone copyto ./{} iujs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: dks-build
  namespace: newbuild
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-scalable-k8s-5872ef","am-scalable-k8s-7b5e61"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: rstudio-r-libraries-pvc
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c(p[2], p[-2]); .libPaths(p); if(BiocManager::install("dks", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      containers:
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /usr/local/lib/R/site-library/dks /mnt/libs/R/dks && cd /home/rstudio && ls | grep "dks" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && rclone copyto /usr/local/lib/R/site-library/dks osn:bir190004-bucket01/libraries/RELEASE_3_14/container/dks -v && cd /home/rstudio && ls | grep "dks" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && rclone copyto /usr/local/lib/R/site-library/dks iujs:js-builder/libraries/RELEASE_3_14/container/dks -v && cd /home/rstudio && ls | grep "dks" | xargs -i rclone copyto ./{} iujs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/usr/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
